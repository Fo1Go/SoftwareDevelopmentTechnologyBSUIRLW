package LR4;

// Разработать проект управления процессами на основе создания и реализации интерфейсов для
// предметных областей, создать консольное приложение, удовлетворяющее следующим требованиям:
// использовать возможности ООП(классы, наследование, полиморфизм, инкапсуляция).
// Аргументировать принадлежность классу каждого создаваемого метода и
// корректно переопределить для каждого класса методы equals(), hashCode(), toString().
// Каждый класс должен иметь отражающее смысл название и информативный состав.
// Наследование должно применяться только тогда, когда это имеет смысл.
// При кодировании должны быть использованы соглашения об оформлении кода java code convention.
// Классы должны быть грамотно разложены по пакетам.
// При необходимости использовать внутренние и вложенные классы.
// Консольное меню должно быть минимальным.
// Для хранения параметров инициализации можно использовать файлы.
// Для ввода данных использовать обработку исключительных ситуаций.

// 21.Каталог ПО (папка на диске).
// Определить иерархию директории, используя классы: вид ПО, название, версия.
// Организовать поиск файлов по определенному виду,
// реализовать расчет объема занимаемой памяти файлами в папке,
// вывести иерархию версий по названию ПО.


public class LR4 {
    public static void main(String... args) {
        Catalog root = new Catalog("/", "root");
        Catalog dir = new Catalog("/root", "dir");
        File file1 = new File(root, "name.txt", 18L, "78126389216381");
        File file2 = new File(root, "name.docx", 23L, "87123687216371238");
        root.appendCatalog(dir);
        File file3 = new File(root, "cer.txt", 123L, "34122");
        dir.appendFile(file3);
        root.appendFiles(file1, file2);
        System.out.println(root.getSize());
        System.out.println(root.findFilesByExtension(".txt", true));
        System.out.println(root.findFilesByExtension(".txt", false));

    }
}
